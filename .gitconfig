[filter "lfs"]
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true
    clean = git-lfs clean -- %f
[core] 
    # editor = "" --wait
[user]
    name = MacbookPro-Nia
    email = sh563295875@163.com
[alias]
    co = checkout
    br = branch
    ci = commit
    # ci -am "message" add与commit合并指令（只对已经index的文件有效）如果是工作区新增的文件必须要先add
    # git status -u untracked的文件默认只会输出到他的所处的文件夹，u参数可以把所有全路径文件名输出到控制台
    st = status -u
    last = log -1 HEAD
    lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
    unstage = reset HEAD --
    # 1.比较工作区与index files中的差别，仅仅包括工作区已追踪的文件的修改（表示相对于index区，工作区有哪些变化）
    d = diff
    # 2.比较工作区中和最新一次commit的差别,包括工作区和index区所有已追踪的文件的修改（表示相对于head有哪些改变）
    dh = diff HEAD
    # 3.比较index files和最新一次commit的差别，从head到index区的修改（表示相对于head有哪些改变）
    dc = diff --cached
    # 4.比较两次提交的差异：git diff commit1 commit2(表示从commit1到commit2的变化，顺序不要乱)
    # commit1和commit2的hashCode可以是不同分支的！
    # commit～n：~符号用于指定一个提交的第n个父提交
    # commit^n：^符号更加灵活，它用于选择合并提交的父提交或普通提交的父提交，
    # ！普通的提交（非合并提交）只有一个父提交，因此在普通提交上使用^2是不合法的。这种情况下，你只能使用^或者^1来引用唯一的父提交。
    # 显示两次commit之间差异的文件列表,包含文件的全路径名
    ds = diff --stat=10000
    # 修改上一次的提交内容
    cia = commit --amend
    # 不以快进的形式合并别的分支，保留别的分支信息。不加该参数，Git 会执行一个快进合并（fast-forward merge），前提是没有冲突且可以直接快进。
    # 被合并的分支会直接指向master分支的最新提交，合并历史会更简洁，但不会有一个明确的合并提交来标记这次合并的发生。
    mn = merge --no-ff
    # 将别的分支上的多个commit合并为一个commit，并且把修改后内容add到暂存区，tip：没有commit，需要我们diff head 看看修改了哪里，最后自己把这个合并后的内容进行commit
    ms = merge --squash 
    # git cherry-pick <commitId> ...（将其他分支的一些commit应用在本分支，tip:最好从左往右写旧的到新的commitId，否则如果直接写一个最新的commitId有可能会出现conflict
    # 拉取远程分支别人的提交到我们即将要提交内容之前，让分支保持一条直线
    # git pull --rebase
    # git fetch origin master:tmp 只拉取不合并
    # git pull 等价于git fetch 和 git merge 会自动合并，并创建一个合并的commit
    # git pull --rebase 等价于 git pull 和 git rebase
    # git stash pop --index // 不加index参数是默认不将暂存取的内容回复的，都是直接回复到工作区
    # git reset // 不加--hard参数不会把工作空间的修改还原只会把暂存区的修改还原
[merge]
    tool = BeyondCompare4
[mergetool "BeyondCompare4"]
    # path =
    # cmd = 
[diff]
    guitool = beyondcompare4
[difftool "beyondcompare4"]
    # path = 
    # cmd = 
